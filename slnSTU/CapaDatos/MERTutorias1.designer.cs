#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDatos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbTutorias")]
	public partial class MERTutoriasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCARRERA(CARRERA instance);
    partial void UpdateCARRERA(CARRERA instance);
    partial void DeleteCARRERA(CARRERA instance);
    partial void InsertDOCENTE(DOCENTE instance);
    partial void UpdateDOCENTE(DOCENTE instance);
    partial void DeleteDOCENTE(DOCENTE instance);
    partial void InsertESTADOESTUDIANTE(ESTADOESTUDIANTE instance);
    partial void UpdateESTADOESTUDIANTE(ESTADOESTUDIANTE instance);
    partial void DeleteESTADOESTUDIANTE(ESTADOESTUDIANTE instance);
    partial void InsertESTADOPERIODO(ESTADOPERIODO instance);
    partial void UpdateESTADOPERIODO(ESTADOPERIODO instance);
    partial void DeleteESTADOPERIODO(ESTADOPERIODO instance);
    partial void InsertESTUDIANTE(ESTUDIANTE instance);
    partial void UpdateESTUDIANTE(ESTUDIANTE instance);
    partial void DeleteESTUDIANTE(ESTUDIANTE instance);
    partial void InsertFACULTAD(FACULTAD instance);
    partial void UpdateFACULTAD(FACULTAD instance);
    partial void DeleteFACULTAD(FACULTAD instance);
    partial void InsertHORASTUTORIA(HORASTUTORIA instance);
    partial void UpdateHORASTUTORIA(HORASTUTORIA instance);
    partial void DeleteHORASTUTORIA(HORASTUTORIA instance);
    partial void InsertMATERIA(MATERIA instance);
    partial void UpdateMATERIA(MATERIA instance);
    partial void DeleteMATERIA(MATERIA instance);
    partial void InsertNIVELMATERIA(NIVELMATERIA instance);
    partial void UpdateNIVELMATERIA(NIVELMATERIA instance);
    partial void DeleteNIVELMATERIA(NIVELMATERIA instance);
    partial void InsertPARALELO(PARALELO instance);
    partial void UpdatePARALELO(PARALELO instance);
    partial void DeletePARALELO(PARALELO instance);
    partial void InsertPERIODOACADEMICO(PERIODOACADEMICO instance);
    partial void UpdatePERIODOACADEMICO(PERIODOACADEMICO instance);
    partial void DeletePERIODOACADEMICO(PERIODOACADEMICO instance);
    partial void InsertREGISTROACADEMICO(REGISTROACADEMICO instance);
    partial void UpdateREGISTROACADEMICO(REGISTROACADEMICO instance);
    partial void DeleteREGISTROACADEMICO(REGISTROACADEMICO instance);
    partial void InsertROL(ROL instance);
    partial void UpdateROL(ROL instance);
    partial void DeleteROL(ROL instance);
    partial void InsertTUTORIA(TUTORIA instance);
    partial void UpdateTUTORIA(TUTORIA instance);
    partial void DeleteTUTORIA(TUTORIA instance);
    #endregion
		
		public MERTutoriasDataContext() : 
				base(global::CapaDatos.Properties.Settings.Default.dbTutoriasConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MERTutoriasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MERTutoriasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MERTutoriasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MERTutoriasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CARRERA> CARRERAs
		{
			get
			{
				return this.GetTable<CARRERA>();
			}
		}
		
		public System.Data.Linq.Table<DOCENTE> DOCENTEs
		{
			get
			{
				return this.GetTable<DOCENTE>();
			}
		}
		
		public System.Data.Linq.Table<ESTADOESTUDIANTE> ESTADOESTUDIANTEs
		{
			get
			{
				return this.GetTable<ESTADOESTUDIANTE>();
			}
		}
		
		public System.Data.Linq.Table<ESTADOPERIODO> ESTADOPERIODOs
		{
			get
			{
				return this.GetTable<ESTADOPERIODO>();
			}
		}
		
		public System.Data.Linq.Table<ESTUDIANTE> ESTUDIANTEs
		{
			get
			{
				return this.GetTable<ESTUDIANTE>();
			}
		}
		
		public System.Data.Linq.Table<FACULTAD> FACULTADs
		{
			get
			{
				return this.GetTable<FACULTAD>();
			}
		}
		
		public System.Data.Linq.Table<HORASTUTORIA> HORASTUTORIAs
		{
			get
			{
				return this.GetTable<HORASTUTORIA>();
			}
		}
		
		public System.Data.Linq.Table<MATERIA> MATERIAs
		{
			get
			{
				return this.GetTable<MATERIA>();
			}
		}
		
		public System.Data.Linq.Table<NIVELMATERIA> NIVELMATERIAs
		{
			get
			{
				return this.GetTable<NIVELMATERIA>();
			}
		}
		
		public System.Data.Linq.Table<PARALELO> PARALELOs
		{
			get
			{
				return this.GetTable<PARALELO>();
			}
		}
		
		public System.Data.Linq.Table<PERIODOACADEMICO> PERIODOACADEMICOs
		{
			get
			{
				return this.GetTable<PERIODOACADEMICO>();
			}
		}
		
		public System.Data.Linq.Table<REGISTROACADEMICO> REGISTROACADEMICOs
		{
			get
			{
				return this.GetTable<REGISTROACADEMICO>();
			}
		}
		
		public System.Data.Linq.Table<ROL> ROLs
		{
			get
			{
				return this.GetTable<ROL>();
			}
		}
		
		public System.Data.Linq.Table<TUTORIA> TUTORIAs
		{
			get
			{
				return this.GetTable<TUTORIA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CARRERA")]
	public partial class CARRERA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CARRERA;
		
		private int _ID_FACULTAD;
		
		private int _CODIGOAREACARRERA;
		
		private string _CODIGOCARRERA;
		
		private string _NOMBRECARRERA;
		
		private string _CODIGOFACULTADAREACARRERA;
		
		private EntitySet<DOCENTE> _DOCENTEs;
		
		private EntityRef<FACULTAD> _FACULTAD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CARRERAChanging(int value);
    partial void OnID_CARRERAChanged();
    partial void OnID_FACULTADChanging(int value);
    partial void OnID_FACULTADChanged();
    partial void OnCODIGOAREACARRERAChanging(int value);
    partial void OnCODIGOAREACARRERAChanged();
    partial void OnCODIGOCARRERAChanging(string value);
    partial void OnCODIGOCARRERAChanged();
    partial void OnNOMBRECARRERAChanging(string value);
    partial void OnNOMBRECARRERAChanged();
    partial void OnCODIGOFACULTADAREACARRERAChanging(string value);
    partial void OnCODIGOFACULTADAREACARRERAChanged();
    #endregion
		
		public CARRERA()
		{
			this._DOCENTEs = new EntitySet<DOCENTE>(new Action<DOCENTE>(this.attach_DOCENTEs), new Action<DOCENTE>(this.detach_DOCENTEs));
			this._FACULTAD = default(EntityRef<FACULTAD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CARRERA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CARRERA
		{
			get
			{
				return this._ID_CARRERA;
			}
			set
			{
				if ((this._ID_CARRERA != value))
				{
					this.OnID_CARRERAChanging(value);
					this.SendPropertyChanging();
					this._ID_CARRERA = value;
					this.SendPropertyChanged("ID_CARRERA");
					this.OnID_CARRERAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_FACULTAD", DbType="Int NOT NULL")]
		public int ID_FACULTAD
		{
			get
			{
				return this._ID_FACULTAD;
			}
			set
			{
				if ((this._ID_FACULTAD != value))
				{
					if (this._FACULTAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_FACULTADChanging(value);
					this.SendPropertyChanging();
					this._ID_FACULTAD = value;
					this.SendPropertyChanged("ID_FACULTAD");
					this.OnID_FACULTADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGOAREACARRERA", DbType="Int NOT NULL")]
		public int CODIGOAREACARRERA
		{
			get
			{
				return this._CODIGOAREACARRERA;
			}
			set
			{
				if ((this._CODIGOAREACARRERA != value))
				{
					this.OnCODIGOAREACARRERAChanging(value);
					this.SendPropertyChanging();
					this._CODIGOAREACARRERA = value;
					this.SendPropertyChanged("CODIGOAREACARRERA");
					this.OnCODIGOAREACARRERAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGOCARRERA", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string CODIGOCARRERA
		{
			get
			{
				return this._CODIGOCARRERA;
			}
			set
			{
				if ((this._CODIGOCARRERA != value))
				{
					this.OnCODIGOCARRERAChanging(value);
					this.SendPropertyChanging();
					this._CODIGOCARRERA = value;
					this.SendPropertyChanged("CODIGOCARRERA");
					this.OnCODIGOCARRERAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRECARRERA", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NOMBRECARRERA
		{
			get
			{
				return this._NOMBRECARRERA;
			}
			set
			{
				if ((this._NOMBRECARRERA != value))
				{
					this.OnNOMBRECARRERAChanging(value);
					this.SendPropertyChanging();
					this._NOMBRECARRERA = value;
					this.SendPropertyChanged("NOMBRECARRERA");
					this.OnNOMBRECARRERAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGOFACULTADAREACARRERA", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string CODIGOFACULTADAREACARRERA
		{
			get
			{
				return this._CODIGOFACULTADAREACARRERA;
			}
			set
			{
				if ((this._CODIGOFACULTADAREACARRERA != value))
				{
					this.OnCODIGOFACULTADAREACARRERAChanging(value);
					this.SendPropertyChanging();
					this._CODIGOFACULTADAREACARRERA = value;
					this.SendPropertyChanged("CODIGOFACULTADAREACARRERA");
					this.OnCODIGOFACULTADAREACARRERAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CARRERA_DOCENTE", Storage="_DOCENTEs", ThisKey="ID_CARRERA", OtherKey="ID_CARRERA")]
		public EntitySet<DOCENTE> DOCENTEs
		{
			get
			{
				return this._DOCENTEs;
			}
			set
			{
				this._DOCENTEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACULTAD_CARRERA", Storage="_FACULTAD", ThisKey="ID_FACULTAD", OtherKey="ID_FACULTAD", IsForeignKey=true)]
		public FACULTAD FACULTAD
		{
			get
			{
				return this._FACULTAD.Entity;
			}
			set
			{
				FACULTAD previousValue = this._FACULTAD.Entity;
				if (((previousValue != value) 
							|| (this._FACULTAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FACULTAD.Entity = null;
						previousValue.CARRERAs.Remove(this);
					}
					this._FACULTAD.Entity = value;
					if ((value != null))
					{
						value.CARRERAs.Add(this);
						this._ID_FACULTAD = value.ID_FACULTAD;
					}
					else
					{
						this._ID_FACULTAD = default(int);
					}
					this.SendPropertyChanged("FACULTAD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DOCENTEs(DOCENTE entity)
		{
			this.SendPropertyChanging();
			entity.CARRERA = this;
		}
		
		private void detach_DOCENTEs(DOCENTE entity)
		{
			this.SendPropertyChanging();
			entity.CARRERA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOCENTE")]
	public partial class DOCENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DOCENTE;
		
		private int _ID_CARRERA;
		
		private System.Nullable<int> _ID_COORDINADOR;
		
		private int _ID_ROL;
		
		private string _PRIMERNOMBREDOCENTE;
		
		private string _SEGUNDONOMBREDOCENTE;
		
		private string _PRIMERAPELLIDODOCENTE;
		
		private string _SEGUNDOAPELLIDODOCENTE;
		
		private string _EMAILDOCENTE;
		
		private string _CEDULADOCENTE;
		
		private EntitySet<DOCENTE> _DOCENTEs;
		
		private EntitySet<HORASTUTORIA> _HORASTUTORIAs;
		
		private EntitySet<REGISTROACADEMICO> _REGISTROACADEMICOs;
		
		private EntityRef<DOCENTE> _DOCENTE1;
		
		private EntityRef<CARRERA> _CARRERA;
		
		private EntityRef<ROL> _ROL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DOCENTEChanging(int value);
    partial void OnID_DOCENTEChanged();
    partial void OnID_CARRERAChanging(int value);
    partial void OnID_CARRERAChanged();
    partial void OnID_COORDINADORChanging(System.Nullable<int> value);
    partial void OnID_COORDINADORChanged();
    partial void OnID_ROLChanging(int value);
    partial void OnID_ROLChanged();
    partial void OnPRIMERNOMBREDOCENTEChanging(string value);
    partial void OnPRIMERNOMBREDOCENTEChanged();
    partial void OnSEGUNDONOMBREDOCENTEChanging(string value);
    partial void OnSEGUNDONOMBREDOCENTEChanged();
    partial void OnPRIMERAPELLIDODOCENTEChanging(string value);
    partial void OnPRIMERAPELLIDODOCENTEChanged();
    partial void OnSEGUNDOAPELLIDODOCENTEChanging(string value);
    partial void OnSEGUNDOAPELLIDODOCENTEChanged();
    partial void OnEMAILDOCENTEChanging(string value);
    partial void OnEMAILDOCENTEChanged();
    partial void OnCEDULADOCENTEChanging(string value);
    partial void OnCEDULADOCENTEChanged();
    #endregion
		
		public DOCENTE()
		{
			this._DOCENTEs = new EntitySet<DOCENTE>(new Action<DOCENTE>(this.attach_DOCENTEs), new Action<DOCENTE>(this.detach_DOCENTEs));
			this._HORASTUTORIAs = new EntitySet<HORASTUTORIA>(new Action<HORASTUTORIA>(this.attach_HORASTUTORIAs), new Action<HORASTUTORIA>(this.detach_HORASTUTORIAs));
			this._REGISTROACADEMICOs = new EntitySet<REGISTROACADEMICO>(new Action<REGISTROACADEMICO>(this.attach_REGISTROACADEMICOs), new Action<REGISTROACADEMICO>(this.detach_REGISTROACADEMICOs));
			this._DOCENTE1 = default(EntityRef<DOCENTE>);
			this._CARRERA = default(EntityRef<CARRERA>);
			this._ROL = default(EntityRef<ROL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DOCENTE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_DOCENTE
		{
			get
			{
				return this._ID_DOCENTE;
			}
			set
			{
				if ((this._ID_DOCENTE != value))
				{
					this.OnID_DOCENTEChanging(value);
					this.SendPropertyChanging();
					this._ID_DOCENTE = value;
					this.SendPropertyChanged("ID_DOCENTE");
					this.OnID_DOCENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CARRERA", DbType="Int NOT NULL")]
		public int ID_CARRERA
		{
			get
			{
				return this._ID_CARRERA;
			}
			set
			{
				if ((this._ID_CARRERA != value))
				{
					if (this._CARRERA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CARRERAChanging(value);
					this.SendPropertyChanging();
					this._ID_CARRERA = value;
					this.SendPropertyChanged("ID_CARRERA");
					this.OnID_CARRERAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_COORDINADOR", DbType="Int")]
		public System.Nullable<int> ID_COORDINADOR
		{
			get
			{
				return this._ID_COORDINADOR;
			}
			set
			{
				if ((this._ID_COORDINADOR != value))
				{
					if (this._DOCENTE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_COORDINADORChanging(value);
					this.SendPropertyChanging();
					this._ID_COORDINADOR = value;
					this.SendPropertyChanged("ID_COORDINADOR");
					this.OnID_COORDINADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ROL", DbType="Int NOT NULL")]
		public int ID_ROL
		{
			get
			{
				return this._ID_ROL;
			}
			set
			{
				if ((this._ID_ROL != value))
				{
					if (this._ROL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ROLChanging(value);
					this.SendPropertyChanging();
					this._ID_ROL = value;
					this.SendPropertyChanged("ID_ROL");
					this.OnID_ROLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRIMERNOMBREDOCENTE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PRIMERNOMBREDOCENTE
		{
			get
			{
				return this._PRIMERNOMBREDOCENTE;
			}
			set
			{
				if ((this._PRIMERNOMBREDOCENTE != value))
				{
					this.OnPRIMERNOMBREDOCENTEChanging(value);
					this.SendPropertyChanging();
					this._PRIMERNOMBREDOCENTE = value;
					this.SendPropertyChanged("PRIMERNOMBREDOCENTE");
					this.OnPRIMERNOMBREDOCENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEGUNDONOMBREDOCENTE", DbType="VarChar(20)")]
		public string SEGUNDONOMBREDOCENTE
		{
			get
			{
				return this._SEGUNDONOMBREDOCENTE;
			}
			set
			{
				if ((this._SEGUNDONOMBREDOCENTE != value))
				{
					this.OnSEGUNDONOMBREDOCENTEChanging(value);
					this.SendPropertyChanging();
					this._SEGUNDONOMBREDOCENTE = value;
					this.SendPropertyChanged("SEGUNDONOMBREDOCENTE");
					this.OnSEGUNDONOMBREDOCENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRIMERAPELLIDODOCENTE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PRIMERAPELLIDODOCENTE
		{
			get
			{
				return this._PRIMERAPELLIDODOCENTE;
			}
			set
			{
				if ((this._PRIMERAPELLIDODOCENTE != value))
				{
					this.OnPRIMERAPELLIDODOCENTEChanging(value);
					this.SendPropertyChanging();
					this._PRIMERAPELLIDODOCENTE = value;
					this.SendPropertyChanged("PRIMERAPELLIDODOCENTE");
					this.OnPRIMERAPELLIDODOCENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEGUNDOAPELLIDODOCENTE", DbType="VarChar(20)")]
		public string SEGUNDOAPELLIDODOCENTE
		{
			get
			{
				return this._SEGUNDOAPELLIDODOCENTE;
			}
			set
			{
				if ((this._SEGUNDOAPELLIDODOCENTE != value))
				{
					this.OnSEGUNDOAPELLIDODOCENTEChanging(value);
					this.SendPropertyChanging();
					this._SEGUNDOAPELLIDODOCENTE = value;
					this.SendPropertyChanged("SEGUNDOAPELLIDODOCENTE");
					this.OnSEGUNDOAPELLIDODOCENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAILDOCENTE", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string EMAILDOCENTE
		{
			get
			{
				return this._EMAILDOCENTE;
			}
			set
			{
				if ((this._EMAILDOCENTE != value))
				{
					this.OnEMAILDOCENTEChanging(value);
					this.SendPropertyChanging();
					this._EMAILDOCENTE = value;
					this.SendPropertyChanged("EMAILDOCENTE");
					this.OnEMAILDOCENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULADOCENTE", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string CEDULADOCENTE
		{
			get
			{
				return this._CEDULADOCENTE;
			}
			set
			{
				if ((this._CEDULADOCENTE != value))
				{
					this.OnCEDULADOCENTEChanging(value);
					this.SendPropertyChanging();
					this._CEDULADOCENTE = value;
					this.SendPropertyChanged("CEDULADOCENTE");
					this.OnCEDULADOCENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCENTE_DOCENTE", Storage="_DOCENTEs", ThisKey="ID_DOCENTE", OtherKey="ID_COORDINADOR")]
		public EntitySet<DOCENTE> DOCENTEs
		{
			get
			{
				return this._DOCENTEs;
			}
			set
			{
				this._DOCENTEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCENTE_HORASTUTORIA", Storage="_HORASTUTORIAs", ThisKey="ID_DOCENTE", OtherKey="ID_DOCENTE")]
		public EntitySet<HORASTUTORIA> HORASTUTORIAs
		{
			get
			{
				return this._HORASTUTORIAs;
			}
			set
			{
				this._HORASTUTORIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCENTE_REGISTROACADEMICO", Storage="_REGISTROACADEMICOs", ThisKey="ID_DOCENTE", OtherKey="ID_DOCENTE")]
		public EntitySet<REGISTROACADEMICO> REGISTROACADEMICOs
		{
			get
			{
				return this._REGISTROACADEMICOs;
			}
			set
			{
				this._REGISTROACADEMICOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCENTE_DOCENTE", Storage="_DOCENTE1", ThisKey="ID_COORDINADOR", OtherKey="ID_DOCENTE", IsForeignKey=true)]
		public DOCENTE DOCENTE1
		{
			get
			{
				return this._DOCENTE1.Entity;
			}
			set
			{
				DOCENTE previousValue = this._DOCENTE1.Entity;
				if (((previousValue != value) 
							|| (this._DOCENTE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOCENTE1.Entity = null;
						previousValue.DOCENTEs.Remove(this);
					}
					this._DOCENTE1.Entity = value;
					if ((value != null))
					{
						value.DOCENTEs.Add(this);
						this._ID_COORDINADOR = value.ID_DOCENTE;
					}
					else
					{
						this._ID_COORDINADOR = default(Nullable<int>);
					}
					this.SendPropertyChanged("DOCENTE1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CARRERA_DOCENTE", Storage="_CARRERA", ThisKey="ID_CARRERA", OtherKey="ID_CARRERA", IsForeignKey=true)]
		public CARRERA CARRERA
		{
			get
			{
				return this._CARRERA.Entity;
			}
			set
			{
				CARRERA previousValue = this._CARRERA.Entity;
				if (((previousValue != value) 
							|| (this._CARRERA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CARRERA.Entity = null;
						previousValue.DOCENTEs.Remove(this);
					}
					this._CARRERA.Entity = value;
					if ((value != null))
					{
						value.DOCENTEs.Add(this);
						this._ID_CARRERA = value.ID_CARRERA;
					}
					else
					{
						this._ID_CARRERA = default(int);
					}
					this.SendPropertyChanged("CARRERA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROL_DOCENTE", Storage="_ROL", ThisKey="ID_ROL", OtherKey="ID_ROL", IsForeignKey=true)]
		public ROL ROL
		{
			get
			{
				return this._ROL.Entity;
			}
			set
			{
				ROL previousValue = this._ROL.Entity;
				if (((previousValue != value) 
							|| (this._ROL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ROL.Entity = null;
						previousValue.DOCENTEs.Remove(this);
					}
					this._ROL.Entity = value;
					if ((value != null))
					{
						value.DOCENTEs.Add(this);
						this._ID_ROL = value.ID_ROL;
					}
					else
					{
						this._ID_ROL = default(int);
					}
					this.SendPropertyChanged("ROL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DOCENTEs(DOCENTE entity)
		{
			this.SendPropertyChanging();
			entity.DOCENTE1 = this;
		}
		
		private void detach_DOCENTEs(DOCENTE entity)
		{
			this.SendPropertyChanging();
			entity.DOCENTE1 = null;
		}
		
		private void attach_HORASTUTORIAs(HORASTUTORIA entity)
		{
			this.SendPropertyChanging();
			entity.DOCENTE = this;
		}
		
		private void detach_HORASTUTORIAs(HORASTUTORIA entity)
		{
			this.SendPropertyChanging();
			entity.DOCENTE = null;
		}
		
		private void attach_REGISTROACADEMICOs(REGISTROACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.DOCENTE = this;
		}
		
		private void detach_REGISTROACADEMICOs(REGISTROACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.DOCENTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESTADOESTUDIANTE")]
	public partial class ESTADOESTUDIANTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ESTADOESTUDIANTE;
		
		private bool _NOMBREESTADOESTUDIANTE;
		
		private EntitySet<REGISTROACADEMICO> _REGISTROACADEMICOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ESTADOESTUDIANTEChanging(int value);
    partial void OnID_ESTADOESTUDIANTEChanged();
    partial void OnNOMBREESTADOESTUDIANTEChanging(bool value);
    partial void OnNOMBREESTADOESTUDIANTEChanged();
    #endregion
		
		public ESTADOESTUDIANTE()
		{
			this._REGISTROACADEMICOs = new EntitySet<REGISTROACADEMICO>(new Action<REGISTROACADEMICO>(this.attach_REGISTROACADEMICOs), new Action<REGISTROACADEMICO>(this.detach_REGISTROACADEMICOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADOESTUDIANTE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ESTADOESTUDIANTE
		{
			get
			{
				return this._ID_ESTADOESTUDIANTE;
			}
			set
			{
				if ((this._ID_ESTADOESTUDIANTE != value))
				{
					this.OnID_ESTADOESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADOESTUDIANTE = value;
					this.SendPropertyChanged("ID_ESTADOESTUDIANTE");
					this.OnID_ESTADOESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREESTADOESTUDIANTE", DbType="Bit NOT NULL")]
		public bool NOMBREESTADOESTUDIANTE
		{
			get
			{
				return this._NOMBREESTADOESTUDIANTE;
			}
			set
			{
				if ((this._NOMBREESTADOESTUDIANTE != value))
				{
					this.OnNOMBREESTADOESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._NOMBREESTADOESTUDIANTE = value;
					this.SendPropertyChanged("NOMBREESTADOESTUDIANTE");
					this.OnNOMBREESTADOESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTADOESTUDIANTE_REGISTROACADEMICO", Storage="_REGISTROACADEMICOs", ThisKey="ID_ESTADOESTUDIANTE", OtherKey="ID_ESTADOESTUDIANTE")]
		public EntitySet<REGISTROACADEMICO> REGISTROACADEMICOs
		{
			get
			{
				return this._REGISTROACADEMICOs;
			}
			set
			{
				this._REGISTROACADEMICOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTROACADEMICOs(REGISTROACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.ESTADOESTUDIANTE = this;
		}
		
		private void detach_REGISTROACADEMICOs(REGISTROACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.ESTADOESTUDIANTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESTADOPERIODO")]
	public partial class ESTADOPERIODO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ESTADOPERIODO;
		
		private bool _NOMBREESTADOPERIODO;
		
		private EntitySet<PERIODOACADEMICO> _PERIODOACADEMICOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ESTADOPERIODOChanging(int value);
    partial void OnID_ESTADOPERIODOChanged();
    partial void OnNOMBREESTADOPERIODOChanging(bool value);
    partial void OnNOMBREESTADOPERIODOChanged();
    #endregion
		
		public ESTADOPERIODO()
		{
			this._PERIODOACADEMICOs = new EntitySet<PERIODOACADEMICO>(new Action<PERIODOACADEMICO>(this.attach_PERIODOACADEMICOs), new Action<PERIODOACADEMICO>(this.detach_PERIODOACADEMICOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADOPERIODO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ESTADOPERIODO
		{
			get
			{
				return this._ID_ESTADOPERIODO;
			}
			set
			{
				if ((this._ID_ESTADOPERIODO != value))
				{
					this.OnID_ESTADOPERIODOChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADOPERIODO = value;
					this.SendPropertyChanged("ID_ESTADOPERIODO");
					this.OnID_ESTADOPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREESTADOPERIODO", DbType="Bit NOT NULL")]
		public bool NOMBREESTADOPERIODO
		{
			get
			{
				return this._NOMBREESTADOPERIODO;
			}
			set
			{
				if ((this._NOMBREESTADOPERIODO != value))
				{
					this.OnNOMBREESTADOPERIODOChanging(value);
					this.SendPropertyChanging();
					this._NOMBREESTADOPERIODO = value;
					this.SendPropertyChanged("NOMBREESTADOPERIODO");
					this.OnNOMBREESTADOPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTADOPERIODO_PERIODOACADEMICO", Storage="_PERIODOACADEMICOs", ThisKey="ID_ESTADOPERIODO", OtherKey="ID_ESTADOPERIODO")]
		public EntitySet<PERIODOACADEMICO> PERIODOACADEMICOs
		{
			get
			{
				return this._PERIODOACADEMICOs;
			}
			set
			{
				this._PERIODOACADEMICOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PERIODOACADEMICOs(PERIODOACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.ESTADOPERIODO = this;
		}
		
		private void detach_PERIODOACADEMICOs(PERIODOACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.ESTADOPERIODO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESTUDIANTE")]
	public partial class ESTUDIANTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ESTUDIANTE;
		
		private string _PRIMERNOMBREESTUDIANTE;
		
		private string _SEGUNDONOMBREESTUDIANTE;
		
		private string _PRIMERAPELLIDOESTUDIANTE;
		
		private string _SEGUNDOAPELLIDO_ESTUDIANTE;
		
		private string _NUMEROMATRICULAESTUDIANTE;
		
		private string _EMAILESTUDIANTE;
		
		private string _CEDULAESTUDIANTE;
		
		private EntitySet<REGISTROACADEMICO> _REGISTROACADEMICOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ESTUDIANTEChanging(int value);
    partial void OnID_ESTUDIANTEChanged();
    partial void OnPRIMERNOMBREESTUDIANTEChanging(string value);
    partial void OnPRIMERNOMBREESTUDIANTEChanged();
    partial void OnSEGUNDONOMBREESTUDIANTEChanging(string value);
    partial void OnSEGUNDONOMBREESTUDIANTEChanged();
    partial void OnPRIMERAPELLIDOESTUDIANTEChanging(string value);
    partial void OnPRIMERAPELLIDOESTUDIANTEChanged();
    partial void OnSEGUNDOAPELLIDO_ESTUDIANTEChanging(string value);
    partial void OnSEGUNDOAPELLIDO_ESTUDIANTEChanged();
    partial void OnNUMEROMATRICULAESTUDIANTEChanging(string value);
    partial void OnNUMEROMATRICULAESTUDIANTEChanged();
    partial void OnEMAILESTUDIANTEChanging(string value);
    partial void OnEMAILESTUDIANTEChanged();
    partial void OnCEDULAESTUDIANTEChanging(string value);
    partial void OnCEDULAESTUDIANTEChanged();
    #endregion
		
		public ESTUDIANTE()
		{
			this._REGISTROACADEMICOs = new EntitySet<REGISTROACADEMICO>(new Action<REGISTROACADEMICO>(this.attach_REGISTROACADEMICOs), new Action<REGISTROACADEMICO>(this.detach_REGISTROACADEMICOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTUDIANTE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ESTUDIANTE
		{
			get
			{
				return this._ID_ESTUDIANTE;
			}
			set
			{
				if ((this._ID_ESTUDIANTE != value))
				{
					this.OnID_ESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTUDIANTE = value;
					this.SendPropertyChanged("ID_ESTUDIANTE");
					this.OnID_ESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRIMERNOMBREESTUDIANTE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PRIMERNOMBREESTUDIANTE
		{
			get
			{
				return this._PRIMERNOMBREESTUDIANTE;
			}
			set
			{
				if ((this._PRIMERNOMBREESTUDIANTE != value))
				{
					this.OnPRIMERNOMBREESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._PRIMERNOMBREESTUDIANTE = value;
					this.SendPropertyChanged("PRIMERNOMBREESTUDIANTE");
					this.OnPRIMERNOMBREESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEGUNDONOMBREESTUDIANTE", DbType="VarChar(20)")]
		public string SEGUNDONOMBREESTUDIANTE
		{
			get
			{
				return this._SEGUNDONOMBREESTUDIANTE;
			}
			set
			{
				if ((this._SEGUNDONOMBREESTUDIANTE != value))
				{
					this.OnSEGUNDONOMBREESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._SEGUNDONOMBREESTUDIANTE = value;
					this.SendPropertyChanged("SEGUNDONOMBREESTUDIANTE");
					this.OnSEGUNDONOMBREESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRIMERAPELLIDOESTUDIANTE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PRIMERAPELLIDOESTUDIANTE
		{
			get
			{
				return this._PRIMERAPELLIDOESTUDIANTE;
			}
			set
			{
				if ((this._PRIMERAPELLIDOESTUDIANTE != value))
				{
					this.OnPRIMERAPELLIDOESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._PRIMERAPELLIDOESTUDIANTE = value;
					this.SendPropertyChanged("PRIMERAPELLIDOESTUDIANTE");
					this.OnPRIMERAPELLIDOESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEGUNDOAPELLIDO_ESTUDIANTE", DbType="VarChar(20)")]
		public string SEGUNDOAPELLIDO_ESTUDIANTE
		{
			get
			{
				return this._SEGUNDOAPELLIDO_ESTUDIANTE;
			}
			set
			{
				if ((this._SEGUNDOAPELLIDO_ESTUDIANTE != value))
				{
					this.OnSEGUNDOAPELLIDO_ESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._SEGUNDOAPELLIDO_ESTUDIANTE = value;
					this.SendPropertyChanged("SEGUNDOAPELLIDO_ESTUDIANTE");
					this.OnSEGUNDOAPELLIDO_ESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMEROMATRICULAESTUDIANTE", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string NUMEROMATRICULAESTUDIANTE
		{
			get
			{
				return this._NUMEROMATRICULAESTUDIANTE;
			}
			set
			{
				if ((this._NUMEROMATRICULAESTUDIANTE != value))
				{
					this.OnNUMEROMATRICULAESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._NUMEROMATRICULAESTUDIANTE = value;
					this.SendPropertyChanged("NUMEROMATRICULAESTUDIANTE");
					this.OnNUMEROMATRICULAESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAILESTUDIANTE", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string EMAILESTUDIANTE
		{
			get
			{
				return this._EMAILESTUDIANTE;
			}
			set
			{
				if ((this._EMAILESTUDIANTE != value))
				{
					this.OnEMAILESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._EMAILESTUDIANTE = value;
					this.SendPropertyChanged("EMAILESTUDIANTE");
					this.OnEMAILESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULAESTUDIANTE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CEDULAESTUDIANTE
		{
			get
			{
				return this._CEDULAESTUDIANTE;
			}
			set
			{
				if ((this._CEDULAESTUDIANTE != value))
				{
					this.OnCEDULAESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._CEDULAESTUDIANTE = value;
					this.SendPropertyChanged("CEDULAESTUDIANTE");
					this.OnCEDULAESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTUDIANTE_REGISTROACADEMICO", Storage="_REGISTROACADEMICOs", ThisKey="ID_ESTUDIANTE", OtherKey="ID_ESTUDIANTE")]
		public EntitySet<REGISTROACADEMICO> REGISTROACADEMICOs
		{
			get
			{
				return this._REGISTROACADEMICOs;
			}
			set
			{
				this._REGISTROACADEMICOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTROACADEMICOs(REGISTROACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.ESTUDIANTE = this;
		}
		
		private void detach_REGISTROACADEMICOs(REGISTROACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.ESTUDIANTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FACULTAD")]
	public partial class FACULTAD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_FACULTAD;
		
		private string _NOMBREFACULTAD;
		
		private EntitySet<CARRERA> _CARRERAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FACULTADChanging(int value);
    partial void OnID_FACULTADChanged();
    partial void OnNOMBREFACULTADChanging(string value);
    partial void OnNOMBREFACULTADChanged();
    #endregion
		
		public FACULTAD()
		{
			this._CARRERAs = new EntitySet<CARRERA>(new Action<CARRERA>(this.attach_CARRERAs), new Action<CARRERA>(this.detach_CARRERAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_FACULTAD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_FACULTAD
		{
			get
			{
				return this._ID_FACULTAD;
			}
			set
			{
				if ((this._ID_FACULTAD != value))
				{
					this.OnID_FACULTADChanging(value);
					this.SendPropertyChanging();
					this._ID_FACULTAD = value;
					this.SendPropertyChanged("ID_FACULTAD");
					this.OnID_FACULTADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREFACULTAD", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBREFACULTAD
		{
			get
			{
				return this._NOMBREFACULTAD;
			}
			set
			{
				if ((this._NOMBREFACULTAD != value))
				{
					this.OnNOMBREFACULTADChanging(value);
					this.SendPropertyChanging();
					this._NOMBREFACULTAD = value;
					this.SendPropertyChanged("NOMBREFACULTAD");
					this.OnNOMBREFACULTADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACULTAD_CARRERA", Storage="_CARRERAs", ThisKey="ID_FACULTAD", OtherKey="ID_FACULTAD")]
		public EntitySet<CARRERA> CARRERAs
		{
			get
			{
				return this._CARRERAs;
			}
			set
			{
				this._CARRERAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CARRERAs(CARRERA entity)
		{
			this.SendPropertyChanging();
			entity.FACULTAD = this;
		}
		
		private void detach_CARRERAs(CARRERA entity)
		{
			this.SendPropertyChanging();
			entity.FACULTAD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HORASTUTORIA")]
	public partial class HORASTUTORIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DOCENTE;
		
		private int _ID_PERIODOACADEMICO;
		
		private EntityRef<DOCENTE> _DOCENTE;
		
		private EntityRef<PERIODOACADEMICO> _PERIODOACADEMICO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DOCENTEChanging(int value);
    partial void OnID_DOCENTEChanged();
    partial void OnID_PERIODOACADEMICOChanging(int value);
    partial void OnID_PERIODOACADEMICOChanged();
    #endregion
		
		public HORASTUTORIA()
		{
			this._DOCENTE = default(EntityRef<DOCENTE>);
			this._PERIODOACADEMICO = default(EntityRef<PERIODOACADEMICO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DOCENTE", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_DOCENTE
		{
			get
			{
				return this._ID_DOCENTE;
			}
			set
			{
				if ((this._ID_DOCENTE != value))
				{
					if (this._DOCENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DOCENTEChanging(value);
					this.SendPropertyChanging();
					this._ID_DOCENTE = value;
					this.SendPropertyChanged("ID_DOCENTE");
					this.OnID_DOCENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PERIODOACADEMICO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PERIODOACADEMICO
		{
			get
			{
				return this._ID_PERIODOACADEMICO;
			}
			set
			{
				if ((this._ID_PERIODOACADEMICO != value))
				{
					if (this._PERIODOACADEMICO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PERIODOACADEMICOChanging(value);
					this.SendPropertyChanging();
					this._ID_PERIODOACADEMICO = value;
					this.SendPropertyChanged("ID_PERIODOACADEMICO");
					this.OnID_PERIODOACADEMICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCENTE_HORASTUTORIA", Storage="_DOCENTE", ThisKey="ID_DOCENTE", OtherKey="ID_DOCENTE", IsForeignKey=true)]
		public DOCENTE DOCENTE
		{
			get
			{
				return this._DOCENTE.Entity;
			}
			set
			{
				DOCENTE previousValue = this._DOCENTE.Entity;
				if (((previousValue != value) 
							|| (this._DOCENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOCENTE.Entity = null;
						previousValue.HORASTUTORIAs.Remove(this);
					}
					this._DOCENTE.Entity = value;
					if ((value != null))
					{
						value.HORASTUTORIAs.Add(this);
						this._ID_DOCENTE = value.ID_DOCENTE;
					}
					else
					{
						this._ID_DOCENTE = default(int);
					}
					this.SendPropertyChanged("DOCENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERIODOACADEMICO_HORASTUTORIA", Storage="_PERIODOACADEMICO", ThisKey="ID_PERIODOACADEMICO", OtherKey="ID_PERIODOACADEMICO", IsForeignKey=true)]
		public PERIODOACADEMICO PERIODOACADEMICO
		{
			get
			{
				return this._PERIODOACADEMICO.Entity;
			}
			set
			{
				PERIODOACADEMICO previousValue = this._PERIODOACADEMICO.Entity;
				if (((previousValue != value) 
							|| (this._PERIODOACADEMICO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERIODOACADEMICO.Entity = null;
						previousValue.HORASTUTORIAs.Remove(this);
					}
					this._PERIODOACADEMICO.Entity = value;
					if ((value != null))
					{
						value.HORASTUTORIAs.Add(this);
						this._ID_PERIODOACADEMICO = value.ID_PERIODOACADEMICO;
					}
					else
					{
						this._ID_PERIODOACADEMICO = default(int);
					}
					this.SendPropertyChanged("PERIODOACADEMICO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MATERIA")]
	public partial class MATERIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_MATERIA;
		
		private int _ID_NIVELMATERIA;
		
		private string _NOMBREMATERIA;
		
		private string _SIGLAMATERIA;
		
		private EntitySet<REGISTROACADEMICO> _REGISTROACADEMICOs;
		
		private EntityRef<NIVELMATERIA> _NIVELMATERIA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MATERIAChanging(int value);
    partial void OnID_MATERIAChanged();
    partial void OnID_NIVELMATERIAChanging(int value);
    partial void OnID_NIVELMATERIAChanged();
    partial void OnNOMBREMATERIAChanging(string value);
    partial void OnNOMBREMATERIAChanged();
    partial void OnSIGLAMATERIAChanging(string value);
    partial void OnSIGLAMATERIAChanged();
    #endregion
		
		public MATERIA()
		{
			this._REGISTROACADEMICOs = new EntitySet<REGISTROACADEMICO>(new Action<REGISTROACADEMICO>(this.attach_REGISTROACADEMICOs), new Action<REGISTROACADEMICO>(this.detach_REGISTROACADEMICOs));
			this._NIVELMATERIA = default(EntityRef<NIVELMATERIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MATERIA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_MATERIA
		{
			get
			{
				return this._ID_MATERIA;
			}
			set
			{
				if ((this._ID_MATERIA != value))
				{
					this.OnID_MATERIAChanging(value);
					this.SendPropertyChanging();
					this._ID_MATERIA = value;
					this.SendPropertyChanged("ID_MATERIA");
					this.OnID_MATERIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NIVELMATERIA", DbType="Int NOT NULL")]
		public int ID_NIVELMATERIA
		{
			get
			{
				return this._ID_NIVELMATERIA;
			}
			set
			{
				if ((this._ID_NIVELMATERIA != value))
				{
					if (this._NIVELMATERIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NIVELMATERIAChanging(value);
					this.SendPropertyChanging();
					this._ID_NIVELMATERIA = value;
					this.SendPropertyChanged("ID_NIVELMATERIA");
					this.OnID_NIVELMATERIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREMATERIA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBREMATERIA
		{
			get
			{
				return this._NOMBREMATERIA;
			}
			set
			{
				if ((this._NOMBREMATERIA != value))
				{
					this.OnNOMBREMATERIAChanging(value);
					this.SendPropertyChanging();
					this._NOMBREMATERIA = value;
					this.SendPropertyChanged("NOMBREMATERIA");
					this.OnNOMBREMATERIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIGLAMATERIA", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string SIGLAMATERIA
		{
			get
			{
				return this._SIGLAMATERIA;
			}
			set
			{
				if ((this._SIGLAMATERIA != value))
				{
					this.OnSIGLAMATERIAChanging(value);
					this.SendPropertyChanging();
					this._SIGLAMATERIA = value;
					this.SendPropertyChanged("SIGLAMATERIA");
					this.OnSIGLAMATERIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATERIA_REGISTROACADEMICO", Storage="_REGISTROACADEMICOs", ThisKey="ID_MATERIA", OtherKey="ID_MATERIA")]
		public EntitySet<REGISTROACADEMICO> REGISTROACADEMICOs
		{
			get
			{
				return this._REGISTROACADEMICOs;
			}
			set
			{
				this._REGISTROACADEMICOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NIVELMATERIA_MATERIA", Storage="_NIVELMATERIA", ThisKey="ID_NIVELMATERIA", OtherKey="ID_NIVELMATERIA", IsForeignKey=true)]
		public NIVELMATERIA NIVELMATERIA
		{
			get
			{
				return this._NIVELMATERIA.Entity;
			}
			set
			{
				NIVELMATERIA previousValue = this._NIVELMATERIA.Entity;
				if (((previousValue != value) 
							|| (this._NIVELMATERIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NIVELMATERIA.Entity = null;
						previousValue.MATERIAs.Remove(this);
					}
					this._NIVELMATERIA.Entity = value;
					if ((value != null))
					{
						value.MATERIAs.Add(this);
						this._ID_NIVELMATERIA = value.ID_NIVELMATERIA;
					}
					else
					{
						this._ID_NIVELMATERIA = default(int);
					}
					this.SendPropertyChanged("NIVELMATERIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTROACADEMICOs(REGISTROACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.MATERIA = this;
		}
		
		private void detach_REGISTROACADEMICOs(REGISTROACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.MATERIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NIVELMATERIA")]
	public partial class NIVELMATERIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NIVELMATERIA;
		
		private string _NIVELMATERIA1;
		
		private EntitySet<MATERIA> _MATERIAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NIVELMATERIAChanging(int value);
    partial void OnID_NIVELMATERIAChanged();
    partial void OnNIVELMATERIA1Changing(string value);
    partial void OnNIVELMATERIA1Changed();
    #endregion
		
		public NIVELMATERIA()
		{
			this._MATERIAs = new EntitySet<MATERIA>(new Action<MATERIA>(this.attach_MATERIAs), new Action<MATERIA>(this.detach_MATERIAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NIVELMATERIA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NIVELMATERIA
		{
			get
			{
				return this._ID_NIVELMATERIA;
			}
			set
			{
				if ((this._ID_NIVELMATERIA != value))
				{
					this.OnID_NIVELMATERIAChanging(value);
					this.SendPropertyChanging();
					this._ID_NIVELMATERIA = value;
					this.SendPropertyChanged("ID_NIVELMATERIA");
					this.OnID_NIVELMATERIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="NIVELMATERIA", Storage="_NIVELMATERIA1", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string NIVELMATERIA1
		{
			get
			{
				return this._NIVELMATERIA1;
			}
			set
			{
				if ((this._NIVELMATERIA1 != value))
				{
					this.OnNIVELMATERIA1Changing(value);
					this.SendPropertyChanging();
					this._NIVELMATERIA1 = value;
					this.SendPropertyChanged("NIVELMATERIA1");
					this.OnNIVELMATERIA1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NIVELMATERIA_MATERIA", Storage="_MATERIAs", ThisKey="ID_NIVELMATERIA", OtherKey="ID_NIVELMATERIA")]
		public EntitySet<MATERIA> MATERIAs
		{
			get
			{
				return this._MATERIAs;
			}
			set
			{
				this._MATERIAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MATERIAs(MATERIA entity)
		{
			this.SendPropertyChanging();
			entity.NIVELMATERIA = this;
		}
		
		private void detach_MATERIAs(MATERIA entity)
		{
			this.SendPropertyChanging();
			entity.NIVELMATERIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PARALELO")]
	public partial class PARALELO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PARALELO;
		
		private string _NOMBREPARALELO;
		
		private EntitySet<REGISTROACADEMICO> _REGISTROACADEMICOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PARALELOChanging(int value);
    partial void OnID_PARALELOChanged();
    partial void OnNOMBREPARALELOChanging(string value);
    partial void OnNOMBREPARALELOChanged();
    #endregion
		
		public PARALELO()
		{
			this._REGISTROACADEMICOs = new EntitySet<REGISTROACADEMICO>(new Action<REGISTROACADEMICO>(this.attach_REGISTROACADEMICOs), new Action<REGISTROACADEMICO>(this.detach_REGISTROACADEMICOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PARALELO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PARALELO
		{
			get
			{
				return this._ID_PARALELO;
			}
			set
			{
				if ((this._ID_PARALELO != value))
				{
					this.OnID_PARALELOChanging(value);
					this.SendPropertyChanging();
					this._ID_PARALELO = value;
					this.SendPropertyChanged("ID_PARALELO");
					this.OnID_PARALELOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREPARALELO", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string NOMBREPARALELO
		{
			get
			{
				return this._NOMBREPARALELO;
			}
			set
			{
				if ((this._NOMBREPARALELO != value))
				{
					this.OnNOMBREPARALELOChanging(value);
					this.SendPropertyChanging();
					this._NOMBREPARALELO = value;
					this.SendPropertyChanged("NOMBREPARALELO");
					this.OnNOMBREPARALELOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARALELO_REGISTROACADEMICO", Storage="_REGISTROACADEMICOs", ThisKey="ID_PARALELO", OtherKey="ID_PARALELO")]
		public EntitySet<REGISTROACADEMICO> REGISTROACADEMICOs
		{
			get
			{
				return this._REGISTROACADEMICOs;
			}
			set
			{
				this._REGISTROACADEMICOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTROACADEMICOs(REGISTROACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.PARALELO = this;
		}
		
		private void detach_REGISTROACADEMICOs(REGISTROACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.PARALELO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERIODOACADEMICO")]
	public partial class PERIODOACADEMICO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PERIODOACADEMICO;
		
		private System.Nullable<int> _ID_ESTADOPERIODO;
		
		private string _ANIOPERIODO;
		
		private char _PERIODO;
		
		private System.DateTime _FECHAINICIOPERIODO;
		
		private System.Nullable<System.DateTime> _FECHAFINPERIODO;
		
		private EntitySet<HORASTUTORIA> _HORASTUTORIAs;
		
		private EntitySet<REGISTROACADEMICO> _REGISTROACADEMICOs;
		
		private EntityRef<ESTADOPERIODO> _ESTADOPERIODO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PERIODOACADEMICOChanging(int value);
    partial void OnID_PERIODOACADEMICOChanged();
    partial void OnID_ESTADOPERIODOChanging(System.Nullable<int> value);
    partial void OnID_ESTADOPERIODOChanged();
    partial void OnANIOPERIODOChanging(string value);
    partial void OnANIOPERIODOChanged();
    partial void OnPERIODOChanging(char value);
    partial void OnPERIODOChanged();
    partial void OnFECHAINICIOPERIODOChanging(System.DateTime value);
    partial void OnFECHAINICIOPERIODOChanged();
    partial void OnFECHAFINPERIODOChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHAFINPERIODOChanged();
    #endregion
		
		public PERIODOACADEMICO()
		{
			this._HORASTUTORIAs = new EntitySet<HORASTUTORIA>(new Action<HORASTUTORIA>(this.attach_HORASTUTORIAs), new Action<HORASTUTORIA>(this.detach_HORASTUTORIAs));
			this._REGISTROACADEMICOs = new EntitySet<REGISTROACADEMICO>(new Action<REGISTROACADEMICO>(this.attach_REGISTROACADEMICOs), new Action<REGISTROACADEMICO>(this.detach_REGISTROACADEMICOs));
			this._ESTADOPERIODO = default(EntityRef<ESTADOPERIODO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PERIODOACADEMICO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PERIODOACADEMICO
		{
			get
			{
				return this._ID_PERIODOACADEMICO;
			}
			set
			{
				if ((this._ID_PERIODOACADEMICO != value))
				{
					this.OnID_PERIODOACADEMICOChanging(value);
					this.SendPropertyChanging();
					this._ID_PERIODOACADEMICO = value;
					this.SendPropertyChanged("ID_PERIODOACADEMICO");
					this.OnID_PERIODOACADEMICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADOPERIODO", DbType="Int")]
		public System.Nullable<int> ID_ESTADOPERIODO
		{
			get
			{
				return this._ID_ESTADOPERIODO;
			}
			set
			{
				if ((this._ID_ESTADOPERIODO != value))
				{
					if (this._ESTADOPERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ESTADOPERIODOChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADOPERIODO = value;
					this.SendPropertyChanged("ID_ESTADOPERIODO");
					this.OnID_ESTADOPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANIOPERIODO", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string ANIOPERIODO
		{
			get
			{
				return this._ANIOPERIODO;
			}
			set
			{
				if ((this._ANIOPERIODO != value))
				{
					this.OnANIOPERIODOChanging(value);
					this.SendPropertyChanging();
					this._ANIOPERIODO = value;
					this.SendPropertyChanged("ANIOPERIODO");
					this.OnANIOPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERIODO", DbType="Char(1) NOT NULL")]
		public char PERIODO
		{
			get
			{
				return this._PERIODO;
			}
			set
			{
				if ((this._PERIODO != value))
				{
					this.OnPERIODOChanging(value);
					this.SendPropertyChanging();
					this._PERIODO = value;
					this.SendPropertyChanged("PERIODO");
					this.OnPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAINICIOPERIODO", DbType="DateTime NOT NULL")]
		public System.DateTime FECHAINICIOPERIODO
		{
			get
			{
				return this._FECHAINICIOPERIODO;
			}
			set
			{
				if ((this._FECHAINICIOPERIODO != value))
				{
					this.OnFECHAINICIOPERIODOChanging(value);
					this.SendPropertyChanging();
					this._FECHAINICIOPERIODO = value;
					this.SendPropertyChanged("FECHAINICIOPERIODO");
					this.OnFECHAINICIOPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAFINPERIODO", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHAFINPERIODO
		{
			get
			{
				return this._FECHAFINPERIODO;
			}
			set
			{
				if ((this._FECHAFINPERIODO != value))
				{
					this.OnFECHAFINPERIODOChanging(value);
					this.SendPropertyChanging();
					this._FECHAFINPERIODO = value;
					this.SendPropertyChanged("FECHAFINPERIODO");
					this.OnFECHAFINPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERIODOACADEMICO_HORASTUTORIA", Storage="_HORASTUTORIAs", ThisKey="ID_PERIODOACADEMICO", OtherKey="ID_PERIODOACADEMICO")]
		public EntitySet<HORASTUTORIA> HORASTUTORIAs
		{
			get
			{
				return this._HORASTUTORIAs;
			}
			set
			{
				this._HORASTUTORIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERIODOACADEMICO_REGISTROACADEMICO", Storage="_REGISTROACADEMICOs", ThisKey="ID_PERIODOACADEMICO", OtherKey="ID_PERIODOACADEMICO")]
		public EntitySet<REGISTROACADEMICO> REGISTROACADEMICOs
		{
			get
			{
				return this._REGISTROACADEMICOs;
			}
			set
			{
				this._REGISTROACADEMICOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTADOPERIODO_PERIODOACADEMICO", Storage="_ESTADOPERIODO", ThisKey="ID_ESTADOPERIODO", OtherKey="ID_ESTADOPERIODO", IsForeignKey=true)]
		public ESTADOPERIODO ESTADOPERIODO
		{
			get
			{
				return this._ESTADOPERIODO.Entity;
			}
			set
			{
				ESTADOPERIODO previousValue = this._ESTADOPERIODO.Entity;
				if (((previousValue != value) 
							|| (this._ESTADOPERIODO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESTADOPERIODO.Entity = null;
						previousValue.PERIODOACADEMICOs.Remove(this);
					}
					this._ESTADOPERIODO.Entity = value;
					if ((value != null))
					{
						value.PERIODOACADEMICOs.Add(this);
						this._ID_ESTADOPERIODO = value.ID_ESTADOPERIODO;
					}
					else
					{
						this._ID_ESTADOPERIODO = default(Nullable<int>);
					}
					this.SendPropertyChanged("ESTADOPERIODO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HORASTUTORIAs(HORASTUTORIA entity)
		{
			this.SendPropertyChanging();
			entity.PERIODOACADEMICO = this;
		}
		
		private void detach_HORASTUTORIAs(HORASTUTORIA entity)
		{
			this.SendPropertyChanging();
			entity.PERIODOACADEMICO = null;
		}
		
		private void attach_REGISTROACADEMICOs(REGISTROACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.PERIODOACADEMICO = this;
		}
		
		private void detach_REGISTROACADEMICOs(REGISTROACADEMICO entity)
		{
			this.SendPropertyChanging();
			entity.PERIODOACADEMICO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REGISTROACADEMICO")]
	public partial class REGISTROACADEMICO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DOCENTE;
		
		private int _ID_PERIODOACADEMICO;
		
		private int _ID_ESTADOESTUDIANTE;
		
		private int _ID_PARALELO;
		
		private int _ID_MATERIA;
		
		private int _ID_ESTUDIANTE;
		
		private System.Nullable<decimal> _NOTAPROGRESO1;
		
		private System.Nullable<decimal> _NOTAPROGRESO2;
		
		private System.Nullable<decimal> _NOTAEXAMENFINAL;
		
		private char _TIPOMATRICULA;
		
		private EntitySet<TUTORIA> _TUTORIAs;
		
		private EntityRef<DOCENTE> _DOCENTE;
		
		private EntityRef<ESTADOESTUDIANTE> _ESTADOESTUDIANTE;
		
		private EntityRef<ESTUDIANTE> _ESTUDIANTE;
		
		private EntityRef<MATERIA> _MATERIA;
		
		private EntityRef<PARALELO> _PARALELO;
		
		private EntityRef<PERIODOACADEMICO> _PERIODOACADEMICO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DOCENTEChanging(int value);
    partial void OnID_DOCENTEChanged();
    partial void OnID_PERIODOACADEMICOChanging(int value);
    partial void OnID_PERIODOACADEMICOChanged();
    partial void OnID_ESTADOESTUDIANTEChanging(int value);
    partial void OnID_ESTADOESTUDIANTEChanged();
    partial void OnID_PARALELOChanging(int value);
    partial void OnID_PARALELOChanged();
    partial void OnID_MATERIAChanging(int value);
    partial void OnID_MATERIAChanged();
    partial void OnID_ESTUDIANTEChanging(int value);
    partial void OnID_ESTUDIANTEChanged();
    partial void OnNOTAPROGRESO1Changing(System.Nullable<decimal> value);
    partial void OnNOTAPROGRESO1Changed();
    partial void OnNOTAPROGRESO2Changing(System.Nullable<decimal> value);
    partial void OnNOTAPROGRESO2Changed();
    partial void OnNOTAEXAMENFINALChanging(System.Nullable<decimal> value);
    partial void OnNOTAEXAMENFINALChanged();
    partial void OnTIPOMATRICULAChanging(char value);
    partial void OnTIPOMATRICULAChanged();
    #endregion
		
		public REGISTROACADEMICO()
		{
			this._TUTORIAs = new EntitySet<TUTORIA>(new Action<TUTORIA>(this.attach_TUTORIAs), new Action<TUTORIA>(this.detach_TUTORIAs));
			this._DOCENTE = default(EntityRef<DOCENTE>);
			this._ESTADOESTUDIANTE = default(EntityRef<ESTADOESTUDIANTE>);
			this._ESTUDIANTE = default(EntityRef<ESTUDIANTE>);
			this._MATERIA = default(EntityRef<MATERIA>);
			this._PARALELO = default(EntityRef<PARALELO>);
			this._PERIODOACADEMICO = default(EntityRef<PERIODOACADEMICO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DOCENTE", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_DOCENTE
		{
			get
			{
				return this._ID_DOCENTE;
			}
			set
			{
				if ((this._ID_DOCENTE != value))
				{
					if (this._DOCENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DOCENTEChanging(value);
					this.SendPropertyChanging();
					this._ID_DOCENTE = value;
					this.SendPropertyChanged("ID_DOCENTE");
					this.OnID_DOCENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PERIODOACADEMICO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PERIODOACADEMICO
		{
			get
			{
				return this._ID_PERIODOACADEMICO;
			}
			set
			{
				if ((this._ID_PERIODOACADEMICO != value))
				{
					if (this._PERIODOACADEMICO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PERIODOACADEMICOChanging(value);
					this.SendPropertyChanging();
					this._ID_PERIODOACADEMICO = value;
					this.SendPropertyChanged("ID_PERIODOACADEMICO");
					this.OnID_PERIODOACADEMICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADOESTUDIANTE", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_ESTADOESTUDIANTE
		{
			get
			{
				return this._ID_ESTADOESTUDIANTE;
			}
			set
			{
				if ((this._ID_ESTADOESTUDIANTE != value))
				{
					if (this._ESTADOESTUDIANTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ESTADOESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADOESTUDIANTE = value;
					this.SendPropertyChanged("ID_ESTADOESTUDIANTE");
					this.OnID_ESTADOESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PARALELO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PARALELO
		{
			get
			{
				return this._ID_PARALELO;
			}
			set
			{
				if ((this._ID_PARALELO != value))
				{
					if (this._PARALELO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PARALELOChanging(value);
					this.SendPropertyChanging();
					this._ID_PARALELO = value;
					this.SendPropertyChanged("ID_PARALELO");
					this.OnID_PARALELOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MATERIA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_MATERIA
		{
			get
			{
				return this._ID_MATERIA;
			}
			set
			{
				if ((this._ID_MATERIA != value))
				{
					if (this._MATERIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MATERIAChanging(value);
					this.SendPropertyChanging();
					this._ID_MATERIA = value;
					this.SendPropertyChanged("ID_MATERIA");
					this.OnID_MATERIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTUDIANTE", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_ESTUDIANTE
		{
			get
			{
				return this._ID_ESTUDIANTE;
			}
			set
			{
				if ((this._ID_ESTUDIANTE != value))
				{
					if (this._ESTUDIANTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTUDIANTE = value;
					this.SendPropertyChanged("ID_ESTUDIANTE");
					this.OnID_ESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTAPROGRESO1", DbType="Decimal(3,1)")]
		public System.Nullable<decimal> NOTAPROGRESO1
		{
			get
			{
				return this._NOTAPROGRESO1;
			}
			set
			{
				if ((this._NOTAPROGRESO1 != value))
				{
					this.OnNOTAPROGRESO1Changing(value);
					this.SendPropertyChanging();
					this._NOTAPROGRESO1 = value;
					this.SendPropertyChanged("NOTAPROGRESO1");
					this.OnNOTAPROGRESO1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTAPROGRESO2", DbType="Decimal(3,1)")]
		public System.Nullable<decimal> NOTAPROGRESO2
		{
			get
			{
				return this._NOTAPROGRESO2;
			}
			set
			{
				if ((this._NOTAPROGRESO2 != value))
				{
					this.OnNOTAPROGRESO2Changing(value);
					this.SendPropertyChanging();
					this._NOTAPROGRESO2 = value;
					this.SendPropertyChanged("NOTAPROGRESO2");
					this.OnNOTAPROGRESO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTAEXAMENFINAL", DbType="Decimal(3,1)")]
		public System.Nullable<decimal> NOTAEXAMENFINAL
		{
			get
			{
				return this._NOTAEXAMENFINAL;
			}
			set
			{
				if ((this._NOTAEXAMENFINAL != value))
				{
					this.OnNOTAEXAMENFINALChanging(value);
					this.SendPropertyChanging();
					this._NOTAEXAMENFINAL = value;
					this.SendPropertyChanged("NOTAEXAMENFINAL");
					this.OnNOTAEXAMENFINALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPOMATRICULA", DbType="Char(1) NOT NULL")]
		public char TIPOMATRICULA
		{
			get
			{
				return this._TIPOMATRICULA;
			}
			set
			{
				if ((this._TIPOMATRICULA != value))
				{
					this.OnTIPOMATRICULAChanging(value);
					this.SendPropertyChanging();
					this._TIPOMATRICULA = value;
					this.SendPropertyChanged("TIPOMATRICULA");
					this.OnTIPOMATRICULAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REGISTROACADEMICO_TUTORIA", Storage="_TUTORIAs", ThisKey="ID_DOCENTE,ID_PERIODOACADEMICO,ID_ESTADOESTUDIANTE,ID_PARALELO,ID_MATERIA,ID_ESTU" +
			"DIANTE", OtherKey="ID_DOCENTE,ID_PERIODOACADEMICO,ID_ESTADOESTUDIANTE,ID_PARALELO,ID_MATERIA,ID_ESTU" +
			"DIANTE")]
		public EntitySet<TUTORIA> TUTORIAs
		{
			get
			{
				return this._TUTORIAs;
			}
			set
			{
				this._TUTORIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCENTE_REGISTROACADEMICO", Storage="_DOCENTE", ThisKey="ID_DOCENTE", OtherKey="ID_DOCENTE", IsForeignKey=true)]
		public DOCENTE DOCENTE
		{
			get
			{
				return this._DOCENTE.Entity;
			}
			set
			{
				DOCENTE previousValue = this._DOCENTE.Entity;
				if (((previousValue != value) 
							|| (this._DOCENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOCENTE.Entity = null;
						previousValue.REGISTROACADEMICOs.Remove(this);
					}
					this._DOCENTE.Entity = value;
					if ((value != null))
					{
						value.REGISTROACADEMICOs.Add(this);
						this._ID_DOCENTE = value.ID_DOCENTE;
					}
					else
					{
						this._ID_DOCENTE = default(int);
					}
					this.SendPropertyChanged("DOCENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTADOESTUDIANTE_REGISTROACADEMICO", Storage="_ESTADOESTUDIANTE", ThisKey="ID_ESTADOESTUDIANTE", OtherKey="ID_ESTADOESTUDIANTE", IsForeignKey=true)]
		public ESTADOESTUDIANTE ESTADOESTUDIANTE
		{
			get
			{
				return this._ESTADOESTUDIANTE.Entity;
			}
			set
			{
				ESTADOESTUDIANTE previousValue = this._ESTADOESTUDIANTE.Entity;
				if (((previousValue != value) 
							|| (this._ESTADOESTUDIANTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESTADOESTUDIANTE.Entity = null;
						previousValue.REGISTROACADEMICOs.Remove(this);
					}
					this._ESTADOESTUDIANTE.Entity = value;
					if ((value != null))
					{
						value.REGISTROACADEMICOs.Add(this);
						this._ID_ESTADOESTUDIANTE = value.ID_ESTADOESTUDIANTE;
					}
					else
					{
						this._ID_ESTADOESTUDIANTE = default(int);
					}
					this.SendPropertyChanged("ESTADOESTUDIANTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTUDIANTE_REGISTROACADEMICO", Storage="_ESTUDIANTE", ThisKey="ID_ESTUDIANTE", OtherKey="ID_ESTUDIANTE", IsForeignKey=true)]
		public ESTUDIANTE ESTUDIANTE
		{
			get
			{
				return this._ESTUDIANTE.Entity;
			}
			set
			{
				ESTUDIANTE previousValue = this._ESTUDIANTE.Entity;
				if (((previousValue != value) 
							|| (this._ESTUDIANTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESTUDIANTE.Entity = null;
						previousValue.REGISTROACADEMICOs.Remove(this);
					}
					this._ESTUDIANTE.Entity = value;
					if ((value != null))
					{
						value.REGISTROACADEMICOs.Add(this);
						this._ID_ESTUDIANTE = value.ID_ESTUDIANTE;
					}
					else
					{
						this._ID_ESTUDIANTE = default(int);
					}
					this.SendPropertyChanged("ESTUDIANTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATERIA_REGISTROACADEMICO", Storage="_MATERIA", ThisKey="ID_MATERIA", OtherKey="ID_MATERIA", IsForeignKey=true)]
		public MATERIA MATERIA
		{
			get
			{
				return this._MATERIA.Entity;
			}
			set
			{
				MATERIA previousValue = this._MATERIA.Entity;
				if (((previousValue != value) 
							|| (this._MATERIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MATERIA.Entity = null;
						previousValue.REGISTROACADEMICOs.Remove(this);
					}
					this._MATERIA.Entity = value;
					if ((value != null))
					{
						value.REGISTROACADEMICOs.Add(this);
						this._ID_MATERIA = value.ID_MATERIA;
					}
					else
					{
						this._ID_MATERIA = default(int);
					}
					this.SendPropertyChanged("MATERIA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARALELO_REGISTROACADEMICO", Storage="_PARALELO", ThisKey="ID_PARALELO", OtherKey="ID_PARALELO", IsForeignKey=true)]
		public PARALELO PARALELO
		{
			get
			{
				return this._PARALELO.Entity;
			}
			set
			{
				PARALELO previousValue = this._PARALELO.Entity;
				if (((previousValue != value) 
							|| (this._PARALELO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PARALELO.Entity = null;
						previousValue.REGISTROACADEMICOs.Remove(this);
					}
					this._PARALELO.Entity = value;
					if ((value != null))
					{
						value.REGISTROACADEMICOs.Add(this);
						this._ID_PARALELO = value.ID_PARALELO;
					}
					else
					{
						this._ID_PARALELO = default(int);
					}
					this.SendPropertyChanged("PARALELO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERIODOACADEMICO_REGISTROACADEMICO", Storage="_PERIODOACADEMICO", ThisKey="ID_PERIODOACADEMICO", OtherKey="ID_PERIODOACADEMICO", IsForeignKey=true)]
		public PERIODOACADEMICO PERIODOACADEMICO
		{
			get
			{
				return this._PERIODOACADEMICO.Entity;
			}
			set
			{
				PERIODOACADEMICO previousValue = this._PERIODOACADEMICO.Entity;
				if (((previousValue != value) 
							|| (this._PERIODOACADEMICO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERIODOACADEMICO.Entity = null;
						previousValue.REGISTROACADEMICOs.Remove(this);
					}
					this._PERIODOACADEMICO.Entity = value;
					if ((value != null))
					{
						value.REGISTROACADEMICOs.Add(this);
						this._ID_PERIODOACADEMICO = value.ID_PERIODOACADEMICO;
					}
					else
					{
						this._ID_PERIODOACADEMICO = default(int);
					}
					this.SendPropertyChanged("PERIODOACADEMICO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TUTORIAs(TUTORIA entity)
		{
			this.SendPropertyChanging();
			entity.REGISTROACADEMICO = this;
		}
		
		private void detach_TUTORIAs(TUTORIA entity)
		{
			this.SendPropertyChanging();
			entity.REGISTROACADEMICO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ROL")]
	public partial class ROL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ROL;
		
		private string _NOMBREROL;
		
		private EntitySet<DOCENTE> _DOCENTEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ROLChanging(int value);
    partial void OnID_ROLChanged();
    partial void OnNOMBREROLChanging(string value);
    partial void OnNOMBREROLChanged();
    #endregion
		
		public ROL()
		{
			this._DOCENTEs = new EntitySet<DOCENTE>(new Action<DOCENTE>(this.attach_DOCENTEs), new Action<DOCENTE>(this.detach_DOCENTEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ROL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ROL
		{
			get
			{
				return this._ID_ROL;
			}
			set
			{
				if ((this._ID_ROL != value))
				{
					this.OnID_ROLChanging(value);
					this.SendPropertyChanging();
					this._ID_ROL = value;
					this.SendPropertyChanged("ID_ROL");
					this.OnID_ROLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREROL", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string NOMBREROL
		{
			get
			{
				return this._NOMBREROL;
			}
			set
			{
				if ((this._NOMBREROL != value))
				{
					this.OnNOMBREROLChanging(value);
					this.SendPropertyChanging();
					this._NOMBREROL = value;
					this.SendPropertyChanged("NOMBREROL");
					this.OnNOMBREROLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROL_DOCENTE", Storage="_DOCENTEs", ThisKey="ID_ROL", OtherKey="ID_ROL")]
		public EntitySet<DOCENTE> DOCENTEs
		{
			get
			{
				return this._DOCENTEs;
			}
			set
			{
				this._DOCENTEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DOCENTEs(DOCENTE entity)
		{
			this.SendPropertyChanging();
			entity.ROL = this;
		}
		
		private void detach_DOCENTEs(DOCENTE entity)
		{
			this.SendPropertyChanging();
			entity.ROL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TUTORIA")]
	public partial class TUTORIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TUTORIA;
		
		private int _ID_DOCENTE;
		
		private int _ID_PERIODOACADEMICO;
		
		private int _ID_ESTADOESTUDIANTE;
		
		private int _ID_PARALELO;
		
		private int _ID_MATERIA;
		
		private int _ID_ESTUDIANTE;
		
		private string _TEMATUTORIA;
		
		private System.DateTime _FECHATUTORIA;
		
		private int _TIEMPOTUTORIA;
		
		private EntityRef<REGISTROACADEMICO> _REGISTROACADEMICO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TUTORIAChanging(int value);
    partial void OnID_TUTORIAChanged();
    partial void OnID_DOCENTEChanging(int value);
    partial void OnID_DOCENTEChanged();
    partial void OnID_PERIODOACADEMICOChanging(int value);
    partial void OnID_PERIODOACADEMICOChanged();
    partial void OnID_ESTADOESTUDIANTEChanging(int value);
    partial void OnID_ESTADOESTUDIANTEChanged();
    partial void OnID_PARALELOChanging(int value);
    partial void OnID_PARALELOChanged();
    partial void OnID_MATERIAChanging(int value);
    partial void OnID_MATERIAChanged();
    partial void OnID_ESTUDIANTEChanging(int value);
    partial void OnID_ESTUDIANTEChanged();
    partial void OnTEMATUTORIAChanging(string value);
    partial void OnTEMATUTORIAChanged();
    partial void OnFECHATUTORIAChanging(System.DateTime value);
    partial void OnFECHATUTORIAChanged();
    partial void OnTIEMPOTUTORIAChanging(int value);
    partial void OnTIEMPOTUTORIAChanged();
    #endregion
		
		public TUTORIA()
		{
			this._REGISTROACADEMICO = default(EntityRef<REGISTROACADEMICO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TUTORIA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TUTORIA
		{
			get
			{
				return this._ID_TUTORIA;
			}
			set
			{
				if ((this._ID_TUTORIA != value))
				{
					this.OnID_TUTORIAChanging(value);
					this.SendPropertyChanging();
					this._ID_TUTORIA = value;
					this.SendPropertyChanged("ID_TUTORIA");
					this.OnID_TUTORIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DOCENTE", DbType="Int NOT NULL")]
		public int ID_DOCENTE
		{
			get
			{
				return this._ID_DOCENTE;
			}
			set
			{
				if ((this._ID_DOCENTE != value))
				{
					if (this._REGISTROACADEMICO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DOCENTEChanging(value);
					this.SendPropertyChanging();
					this._ID_DOCENTE = value;
					this.SendPropertyChanged("ID_DOCENTE");
					this.OnID_DOCENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PERIODOACADEMICO", DbType="Int NOT NULL")]
		public int ID_PERIODOACADEMICO
		{
			get
			{
				return this._ID_PERIODOACADEMICO;
			}
			set
			{
				if ((this._ID_PERIODOACADEMICO != value))
				{
					if (this._REGISTROACADEMICO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PERIODOACADEMICOChanging(value);
					this.SendPropertyChanging();
					this._ID_PERIODOACADEMICO = value;
					this.SendPropertyChanged("ID_PERIODOACADEMICO");
					this.OnID_PERIODOACADEMICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADOESTUDIANTE", DbType="Int NOT NULL")]
		public int ID_ESTADOESTUDIANTE
		{
			get
			{
				return this._ID_ESTADOESTUDIANTE;
			}
			set
			{
				if ((this._ID_ESTADOESTUDIANTE != value))
				{
					if (this._REGISTROACADEMICO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ESTADOESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADOESTUDIANTE = value;
					this.SendPropertyChanged("ID_ESTADOESTUDIANTE");
					this.OnID_ESTADOESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PARALELO", DbType="Int NOT NULL")]
		public int ID_PARALELO
		{
			get
			{
				return this._ID_PARALELO;
			}
			set
			{
				if ((this._ID_PARALELO != value))
				{
					if (this._REGISTROACADEMICO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PARALELOChanging(value);
					this.SendPropertyChanging();
					this._ID_PARALELO = value;
					this.SendPropertyChanged("ID_PARALELO");
					this.OnID_PARALELOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MATERIA", DbType="Int NOT NULL")]
		public int ID_MATERIA
		{
			get
			{
				return this._ID_MATERIA;
			}
			set
			{
				if ((this._ID_MATERIA != value))
				{
					if (this._REGISTROACADEMICO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MATERIAChanging(value);
					this.SendPropertyChanging();
					this._ID_MATERIA = value;
					this.SendPropertyChanged("ID_MATERIA");
					this.OnID_MATERIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTUDIANTE", DbType="Int NOT NULL")]
		public int ID_ESTUDIANTE
		{
			get
			{
				return this._ID_ESTUDIANTE;
			}
			set
			{
				if ((this._ID_ESTUDIANTE != value))
				{
					if (this._REGISTROACADEMICO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ESTUDIANTEChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTUDIANTE = value;
					this.SendPropertyChanged("ID_ESTUDIANTE");
					this.OnID_ESTUDIANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMATUTORIA", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TEMATUTORIA
		{
			get
			{
				return this._TEMATUTORIA;
			}
			set
			{
				if ((this._TEMATUTORIA != value))
				{
					this.OnTEMATUTORIAChanging(value);
					this.SendPropertyChanging();
					this._TEMATUTORIA = value;
					this.SendPropertyChanged("TEMATUTORIA");
					this.OnTEMATUTORIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHATUTORIA", DbType="DateTime NOT NULL")]
		public System.DateTime FECHATUTORIA
		{
			get
			{
				return this._FECHATUTORIA;
			}
			set
			{
				if ((this._FECHATUTORIA != value))
				{
					this.OnFECHATUTORIAChanging(value);
					this.SendPropertyChanging();
					this._FECHATUTORIA = value;
					this.SendPropertyChanged("FECHATUTORIA");
					this.OnFECHATUTORIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEMPOTUTORIA", DbType="Int NOT NULL")]
		public int TIEMPOTUTORIA
		{
			get
			{
				return this._TIEMPOTUTORIA;
			}
			set
			{
				if ((this._TIEMPOTUTORIA != value))
				{
					this.OnTIEMPOTUTORIAChanging(value);
					this.SendPropertyChanging();
					this._TIEMPOTUTORIA = value;
					this.SendPropertyChanged("TIEMPOTUTORIA");
					this.OnTIEMPOTUTORIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REGISTROACADEMICO_TUTORIA", Storage="_REGISTROACADEMICO", ThisKey="ID_DOCENTE,ID_PERIODOACADEMICO,ID_ESTADOESTUDIANTE,ID_PARALELO,ID_MATERIA,ID_ESTU" +
			"DIANTE", OtherKey="ID_DOCENTE,ID_PERIODOACADEMICO,ID_ESTADOESTUDIANTE,ID_PARALELO,ID_MATERIA,ID_ESTU" +
			"DIANTE", IsForeignKey=true)]
		public REGISTROACADEMICO REGISTROACADEMICO
		{
			get
			{
				return this._REGISTROACADEMICO.Entity;
			}
			set
			{
				REGISTROACADEMICO previousValue = this._REGISTROACADEMICO.Entity;
				if (((previousValue != value) 
							|| (this._REGISTROACADEMICO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REGISTROACADEMICO.Entity = null;
						previousValue.TUTORIAs.Remove(this);
					}
					this._REGISTROACADEMICO.Entity = value;
					if ((value != null))
					{
						value.TUTORIAs.Add(this);
						this._ID_DOCENTE = value.ID_DOCENTE;
						this._ID_PERIODOACADEMICO = value.ID_PERIODOACADEMICO;
						this._ID_ESTADOESTUDIANTE = value.ID_ESTADOESTUDIANTE;
						this._ID_PARALELO = value.ID_PARALELO;
						this._ID_MATERIA = value.ID_MATERIA;
						this._ID_ESTUDIANTE = value.ID_ESTUDIANTE;
					}
					else
					{
						this._ID_DOCENTE = default(int);
						this._ID_PERIODOACADEMICO = default(int);
						this._ID_ESTADOESTUDIANTE = default(int);
						this._ID_PARALELO = default(int);
						this._ID_MATERIA = default(int);
						this._ID_ESTUDIANTE = default(int);
					}
					this.SendPropertyChanged("REGISTROACADEMICO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
